Linux system:
    - kernel    
    - GNU utilities
    - application
    - graphical desktop

- job of the kernel:
    - memory managment
    - hardware managment
    - file system managment
    - process managment

- initProcess:
    - kernel creates the first process called init and run it
    - process which might start automatically are in some locations
        - first option is: /etc/inittabs 
        - /etc/init.d folder contain scripts which would start at the begining of the system
        - scripts are started via entries under /etc/rcX.d  

- ls:
    - to show all files in the directoy use ls 
    - to show hidden file use ls -a
    - to recursive the folder ls -R
    -  to get the long name with filter ls -l my* 
    - [ab] here it is or a or b 
    - [1-9] here it is from 1 to 9
    - [!ab] does not include a or b

- touch:
    - to create a file use 
- cp:
    - to copy a file
    - cp -R /folder/ /anotherFolder

- mv:
    - to move file 

- mkdir -p :
    - to make parent directory and child directory 

- tail -n 1:
    - read the last line in a file
- head -2 :
    - read the first two line in a file

- kill:
    - send signal tp process based on PID 
    - defualt send TERM signal
    - ex:   
        - kill 3490
- killall:
    - send singal based on name

- mount:
    - if u are not using disturbuation u have to do mount and unmout ur self
    - mount by itself would show the mounted devices on the system
    - mount -t type -o option1,option2 src foldertoMountOn

- umount:
    - unmout device 

- grep:
    - search for pattern
    - grep options pattern file 
    - grep -v :
        - show lines which do not match the pattern  
    - to specifiy more than one match use -e more than one time
        - grep -e abdel -e ahmed file.txt

- to show the enviroment variables:
    - printenv : would show all the variable 

- var1=value1:
    - to set local variable in a process
- $var1:
    - to read the the variable

- $PATH:
    - directory where the linux search for command
    - to add extra PATH
        - PATH=$PATH:/newpath/..

- linux file system:
    - ext filesystem is the basic file sysem for linux
    - journaling file system:
        - u write the change first in temp file and then write the data in inode table

- to get the output from script in another script use x = $(script)
    - testing=$(date)
- $? :
    - to get the exit value of the last script
    - exit 123

- if statment:
    - one way:
        if condition
        then 
            command 
        elif condition
        then    
            command
        else 
            command 
        fi
    - another way:
        if condition; then
            command 
        fi
    comparison u have to give space between bracket [ $x1 -eq $x2 ]:
        -eq -ne -le -ge -gt -lt 
        if [ 1 le 2 ] 
        then 
    - working with string:
        -n means not empty
        -z means empty
        -d directory
        -f file
        -e exits
    - [[ $var = r* ]]
        - u can use double bracket to support regular expression

- to get user input use $1, $2, $3 so on

- Signals:
    - SIGKILL = 9 = uncondiotional kill
- to run in background script&

- sed:
    - s = substitue, i = insert before, a = insert after
    - stream editor to change data
    - it apply command to standard input 
    - sed option script file 
    - sed "s/oldword/newword/"
    - u can give a file to a sed
    - sed "s/old/new/" file.txt
    - to make more than one substitue option 
        sed -e "s/old1/new/1; s/old2/new2/" data.txt
    - to make global substitue per line 
        - sed "s/old/new/g" file.txt
    - to select the line which u would substitue
        - sed "2,3s/old/new/" -> would apply only to line 2 and 3
    - to skip charachter use \
        - sed "s/\/etc\/pass/\/newetc\/newpassword/"
    - to delete a specifie line use d   
        - sed "/old/d" -> remember there is no s at the begining 
    - to delete any lines between lines
        - sed "/startmatch/,/stopmatch/d"
    - to append data use i  
        sed -i "s/old/new/" file.txt